/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GameToken, GameTokenInterface } from "../../src/GameToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newBurner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "burnerType",
        type: "string",
      },
    ],
    name: "BurnerAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFromGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFromPlatform",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFromTournament",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "circulatingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceBurner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformBurner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        internalType: "string",
        name: "burnerType",
        type: "string",
      },
    ],
    name: "setBurnerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tournamentBurner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061189f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063715018a61161010f57806395d89b41116100a2578063c7e432a911610071578063c7e432a9146103da578063d89135cd146103ed578063dd62ed3e146103f6578063f2fde38b1461040957600080fd5b806395d89b41146103a4578063a457c2d7146103ac578063a9059cbb146103bf578063b55cd04b146103d257600080fd5b80638456cb59116100de5780638456cb59146103705780638b8a0f34146103785780638da5cb5b1461038b5780639358928b1461039c57600080fd5b8063715018a61461033a57806378f55cfc1461034257806379cc6790146103555780638129fc1c1461036857600080fd5b806339509351116101875780635c975abb116101565780635c975abb146102e0578063693be559146102eb5780636e926b72146102fe57806370a082311461031157600080fd5b8063395093511461029d5780633f4ba83a146102b0578063411219fd146102ba57806342966c68146102cd57600080fd5b80631aaa2013116101c35780631aaa20131461023d57806323b872dd14610268578063313ce5671461027b57806332cb6b0c1461028a57600080fd5b806306fdde03146101ea578063095ea7b31461020857806318160ddd1461022b575b600080fd5b6101f261041c565b6040516101ff919061149f565b60405180910390f35b61021b610216366004611509565b6104ae565b60405190151581526020016101ff565b6035545b6040519081526020016101ff565b60fe54610250906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b61021b610276366004611533565b6104c8565b604051601281526020016101ff565b61022f6b06c9144c1c690d4cb400000081565b61021b6102ab366004611509565b6104ec565b6102b861050e565b005b60fc54610250906001600160a01b031681565b6102b86102db36600461156f565b610520565b60c95460ff1661021b565b60fd54610250906001600160a01b031681565b6102b861030c36600461156f565b61052e565b61022f61031f366004611588565b6001600160a01b031660009081526033602052604090205490565b6102b8610609565b6102b861035036600461156f565b61061b565b6102b8610363366004611509565b6106ed565b6102b8610706565b6102b8610882565b6102b861038636600461156f565b610892565b6097546001600160a01b0316610250565b61022f610963565b6101f2610973565b61021b6103ba366004611509565b610982565b61021b6103cd366004611509565b6109fd565b60fb5461022f565b6102b86103e83660046115c0565b610a0b565b61022f60fb5481565b61022f610404366004611682565b610b73565b6102b8610417366004611588565b610b9e565b60606036805461042b906116b5565b80601f0160208091040260200160405190810160405280929190818152602001828054610457906116b5565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b5050505050905090565b6000336104bc818585610c14565b60019150505b92915050565b6000336104d6858285610d38565b6104e1858585610db2565b506001949350505050565b6000336104bc8185856104ff8383610b73565b61050991906116ef565b610c14565b610516610f5d565b61051e610fb7565b565b61052b335b82611009565b50565b61053661102e565b60fd546001600160a01b0316336001600160a01b0316146105955760405162461bcd60e51b815260206004820152601460248201527327b7363c90383630ba3337b93690313ab93732b960611b60448201526064015b60405180910390fd5b61059e33610525565b336001600160a01b03167ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f826040516105fe918152604060208201819052600d908201526c506c6174666f726d204665657360981b606082015260800190565b60405180910390a250565b610611610f5d565b61051e6000611074565b61062361102e565b60fc546001600160a01b0316336001600160a01b03161461067f5760405162461bcd60e51b815260206004820152601660248201527527b7363c903a37bab93730b6b2b73a10313ab93732b960511b604482015260640161058c565b61068833610525565b336001600160a01b03167ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f826040516105fe91815260406020820181905260129082015271546f75726e616d656e7420526576656e756560701b606082015260800190565b6106f8823383610d38565b6107028282611009565b5050565b600054610100900460ff16158080156107265750600054600160ff909116105b806107405750303b158015610740575060005460ff166001145b6107a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161058c565b6000805460ff1916600117905580156107c6576000805461ff0019166101001790555b61080c6040518060400160405280600981526020016823b0b6b2aa37b5b2b760b91b8152506040518060400160405280600381526020016247544b60e81b8152506110c6565b6108146110f7565b61081c61111e565b61082461114d565b61083a336b06c9144c1c690d4cb400000061117c565b801561052b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61088a610f5d565b61051e61123d565b61089a61102e565b60fe546001600160a01b0316336001600160a01b0316146108f65760405162461bcd60e51b815260206004820152601660248201527527b7363c9033b7bb32b93730b731b290313ab93732b960511b604482015260640161058c565b6108ff33610525565b336001600160a01b03167ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f826040516105fe9181526040602082018190526011908201527023b7bb32b93730b731b29020b1ba34b7b760791b606082015260800190565b600061096e60355490565b905090565b60606037805461042b906116b5565b600033816109908286610b73565b9050838110156109f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161058c565b6104e18286868403610c14565b6000336104bc818585610db2565b610a13610f5d565b805160208201207fe4bc24a2a4da55dbca1e079dd73db29fa7313bfb998d29f88692c6a5a3cc8ca98101610a615760fc80546001600160a01b0319166001600160a01b038516179055610b2d565b7f3cb058642d3f17bc460bdd6eab42c21564f6b5228beab6a905a2eb32727c49d18103610aa85760fd80546001600160a01b0319166001600160a01b038516179055610b2d565b7fabea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a8103610aef5760fe80546001600160a01b0319166001600160a01b038516179055610b2d565b60405162461bcd60e51b8152602060048201526013602482015272556e6b6e6f776e206275726e6572207479706560681b604482015260640161058c565b826001600160a01b03167ff1b359af625bfcb92ec37b3fd299880971c0e7a9cfdd8e0da28dc51a044bd11483604051610b66919061149f565b60405180910390a2505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610ba6610f5d565b6001600160a01b038116610c0b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058c565b61052b81611074565b6001600160a01b038316610c765760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b6001600160a01b038216610cd75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161058c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d448484610b73565b90506000198114610dac5781811015610d9f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161058c565b610dac8484848403610c14565b50505050565b6001600160a01b038316610e165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161058c565b6001600160a01b038216610e785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161058c565b6001600160a01b03831660009081526033602052604090205481811015610ef05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161058c565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f509086815260200190565b60405180910390a3610dac565b6097546001600160a01b0316331461051e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058c565b610fbf61127f565b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61101382826112c8565b8060fb600082825461102591906116ef565b90915550505050565b60c95460ff161561051e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161058c565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110ed5760405162461bcd60e51b815260040161058c90611710565b61070282826113fc565b600054610100900460ff1661051e5760405162461bcd60e51b815260040161058c90611710565b600054610100900460ff166111455760405162461bcd60e51b815260040161058c90611710565b61051e61143c565b600054610100900460ff166111745760405162461bcd60e51b815260040161058c90611710565b61051e61146c565b6001600160a01b0382166111d25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161058c565b80603560008282546111e491906116ef565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b61124561102e565b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fec3390565b505050565b60c95460ff1661051e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161058c565b6001600160a01b0382166113285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161058c565b6001600160a01b0382166000908152603360205260409020548181101561139c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161058c565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166114235760405162461bcd60e51b815260040161058c90611710565b603661142f83826117a9565b50603761127a82826117a9565b600054610100900460ff166114635760405162461bcd60e51b815260040161058c90611710565b61051e33611074565b600054610100900460ff166114935760405162461bcd60e51b815260040161058c90611710565b60c9805460ff19169055565b600060208083528351808285015260005b818110156114cc578581018301518582016040015282016114b0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461150457600080fd5b919050565b6000806040838503121561151c57600080fd5b611525836114ed565b946020939093013593505050565b60008060006060848603121561154857600080fd5b611551846114ed565b925061155f602085016114ed565b9150604084013590509250925092565b60006020828403121561158157600080fd5b5035919050565b60006020828403121561159a57600080fd5b6115a3826114ed565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156115d357600080fd5b6115dc836114ed565b9150602083013567ffffffffffffffff808211156115f957600080fd5b818501915085601f83011261160d57600080fd5b81358181111561161f5761161f6115aa565b604051601f8201601f19908116603f01168101908382118183101715611647576116476115aa565b8160405282815288602084870101111561166057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561169557600080fd5b61169e836114ed565b91506116ac602084016114ed565b90509250929050565b600181811c908216806116c957607f821691505b6020821081036116e957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156104c257634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561127a57600081815260208120601f850160051c810160208610156117825750805b601f850160051c820191505b818110156117a15782815560010161178e565b505050505050565b815167ffffffffffffffff8111156117c3576117c36115aa565b6117d7816117d184546116b5565b8461175b565b602080601f83116001811461180c57600084156117f45750858301515b600019600386901b1c1916600185901b1785556117a1565b600085815260208120601f198616915b8281101561183b5788860151825594840194600190910190840161181c565b50858210156118595787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f111f7d468ad0caf463cfc6202e44fc6172645d6e21f2d422245fd7d2934c6e264736f6c63430008130033";

type GameTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameToken__factory extends ContractFactory {
  constructor(...args: GameTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GameToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameToken__factory {
    return super.connect(runner) as GameToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameTokenInterface {
    return new Interface(_abi) as GameTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameToken {
    return new Contract(address, _abi, runner) as unknown as GameToken;
  }
}
